openapi: 3.0.1
info:
  title: StudentMetrics
  description: API for users metrics
  version: "1.0.0"
servers:
- url: https://5jl103iwe6.execute-api.us-east-1.amazonaws.com/dev
paths:
  /students/companies:
    get:
      parameters:
      - name: studentid
        in: query
        schema:
          type: string
      - name: companyid
        in: query
        schema:
          type: string
      responses:
        200:
          description: Ok
          content: {}
  /students/dashboard:
    get:
      responses:
        200:
          description: Ok
          content: {}
  /students/{studentId}/metrics/finishedcourses:
    get:
      parameters:
      - name: studentId
        in: path
        description: Returns finished courses info by student id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentFinishedCourses'
        400:
          description: Bad request. Student id not found
          content: {}
        404:
          description: Error, student with id not found or does not have mandatory
            attributes.
          content: {}
  /students/{studentId}/metrics/progressplan:
    get:
      parameters:
      - name: studentId
        in: path
        description: Returns finished courses info by student id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Ok
          content: {}
  /users/metrics/coursemonth:
    get:
      responses:
        200:
          description: Ok
          content: {}
  /users/metrics/mostpopular:
    get:
      responses:
        200:
          description: Ok
          content: {}
  /users/metrics/rankingcompany/{companyId}:
    get:
      parameters:
      - name: companyId
        in: path
        description: get ranking company info by company id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Ok
          content: {}

components:
  schemas:
    StudentFinishedCourses:
      type: object
      properties:
        user_id:
          type: integer
          description: The user ID.
        finished_date:
          type: string
          description: The last login date
        free_courses_count:
          type: integer
          description: The sum free courses counted
        mandatory_courses_count:
          type: integer
          description: The sum mandatory courses counted
        company_id:
          type: string
          description: The user's company id
        test_field:
          type: string

